// const axios = require('axios');

// const apiUrl = 'http://localhost:5000/predict';

// const videoPath = 'C:\\Users\\My Dell\\Downloads\\Untitled video - Made with Clipchamp (4) (1).mp4';  // Replace with the actual path to your video

// axios.post(apiUrl, { video_path: videoPath })
//   .then(response => {
//     console.log(response.data);
//   })
//   .catch(error => {
//     console.error(error);

//   });


// ///working code:::


// const { spawn } = require('child_process');


// const videoFilePath = 'C:\\Users\\My Dell\\Desktop\\V1-0001_mul_balls187860001.mp4';  // Replace with the actual path to your video

// const pythonProcess = spawn('python', ['model.py', videoFilePath]);

// let outputData = '';




// pythonProcess.stdout.on('data', (data) => {
//   outputData += data.toString();
//   console.log(data.toString()); // Output generated by the Python script
// });

// pythonProcess.stderr.on('data', (data) => {
//   console.error(`Python Error: ${data}`);
// });

// pythonProcess.on('close', (code) => {
//   console.log(`Python process exited with code ${code}`);
//   console.log(outputData); // Output generated by the Python script
 
// });

//  console.log(outputData);

// // res.json({ outputData });
// //working code ends




// const { spawn } = require('child_process');
// const express = require('express');
// const app = express();
// const port = 3000; // Choose your desired port

// app.use(express.json());

// app.get('/processVideo', (req, res) => {
  
//   //const { videoFilePath } = req.body;
//   const videoFilePath = 'C:\\Users\\My Dell\\Desktop\\V1-0001_mul_balls187860001.mp4';  // Replace with the actual path to your video
//   const pythonProcess = spawn('python', ['model.py', videoFilePath]);

//   pythonProcess.stdout.on('data', (data) => {
//     const output = data.toString().trim(); // Trim whitespace
//     console.log(output); // Output generated by the Python script
//     res.write(JSON.stringify({ output })); // Send output as JSON response
//     res.write('\n'); // Add a newline separator
//   });

//   pythonProcess.stderr.on('data', (data) => {
//     console.error(`Python Error: ${data}`);
//   });

//   pythonProcess.on('close', (code) => {
//     console.log(`Python process exited with code ${code}`);
//     res.end(); // End the response when the process is finished
//   });
// });

// app.listen(port, () => {
//   console.log(`Server listening at http://localhost:${port}`);
// });






// const express = require('express');
// const bodyParser = require('body-parser');
// const { spawn } = require('child_process');

// const app = express();
// const port = 3000;

// // Parse JSON bodies
// app.use(bodyParser.json());

// // API endpoint to predict using the Python script
// app.get('/predict', (req, res) => {
//   //const { videoPath } = req.body;
//   const videoPath = 'C:\\Users\\My Dell\\Desktop\\V1-0001_mul_balls187860001.mp4';  // Replace with the actual path to your video
//   if (!videoPath) {
//     return res.status(400).json({ error: 'Video path is required' });
//   }

//   const pythonProcess = spawn('python', ['model.py', videoPath]);

//   let prediction = '';

//   // Listen to stdout data event
//   pythonProcess.stdout.on('data', (data) => {
//     const lines = data.toString().split('\n');
//     lines.forEach(line => {
//       if (line.startsWith('PREDICTION:')) {
//         prediction = line.split(':')[1].trim();
//       }
//     });
//   });

//   // Listen to stderr data event
//   pythonProcess.stderr.on('data', (data) => {
//     console.error(`Error: ${data}`);
//   });

//   // Listen to close event
//   pythonProcess.on('close', (code) => {
//     console.log(`Python process exited with code ${code}`);
//     res.json({ prediction });
//   });
// });

// // Start the server
// app.listen(port, () => {
//   console.log(`Server is running on port ${port}`);
// });
//test code 2 ends 

// //test code 3 begins
// const { spawn } = require('child_process');

// const videoFilePath = 'C:\\Users\\My Dell\\Desktop\\V1-0001_mul_balls187860001.mp4';  // Replace with the actual path to your video

// const pythonProcess = spawn('python', ['model.py', videoFilePath]);

// let outputData = '';

// pythonProcess.stdout.on('data', (data) => {
//   const result = data.toString().trim(); // Trim any extra whitespace
//   if (result.startsWith("Prediction:")) {
//     console.log(result); // Output the prediction result
//     outputData += result + '\n'; // Store the prediction result
//   }
// });

// pythonProcess.stderr.on('data', (data) => {
//   console.error(`Python Error: ${data}`);
// });

// pythonProcess.on('close', (code) => {
//   console.log(`Python process exited with code ${code}`);
//   console.log(outputData); // Output all the prediction results
//   // Here you can further process the outputData as needed
// });

// //test code 3 ends


//test code 4 begins
const express = require('express');
const { spawn } = require('child_process');

const app = express();
const port = 3000;

// Set up SSE route
app.get('/predictions', (req, res) => {
  res.setHeader('Content-Type', 'text/event-stream');
  res.setHeader('Cache-Control', 'no-cache');
  res.setHeader('Connection', 'keep-alive');

  const videoFilePath = 'C:\\Users\\My Dell\\Desktop\\V1-0001_mul_balls187860001.mp4';  // Replace with the actual path to your video
  const pythonProcess = spawn('python', ['model.py', videoFilePath]);

  pythonProcess.stdout.on('data', (data) => {
    const result = data.toString().trim(); // Trim any extra whitespace
    if (result.startsWith("Prediction:")) {
      console.log(result); // Output the prediction result
      res.write(`data: ${result}\n\n`); // Send the prediction result to the frontend
    }
  });

  pythonProcess.stderr.on('data', (data) => {
    console.error(`Python Error: ${data}`);
  });

  pythonProcess.on('close', (code) => {
    console.log(`Python process exited with code ${code}`);
    res.end(); // End the SSE connection when the Python process closes
  });
});

app.listen(port, () => {
  console.log(`API server is running at http://localhost:${port}`);
});


//test code 4 ends